/*
COVID19 Data Exploration
*/

SELECT *
FROM `portfolioproject-335318.covid.CovidDeaths`
WHERE continent IS NOT NULL
ORDER BY 3,4

SELECT *
FROM `portfolioproject-335318.covid.CovidVaccinations`
ORDER BY 3,4

--Select data that we are going to be using

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM `portfolioproject-335318.covid.CovidDeaths`
WHERE continent IS NOT NULL
ORDER BY 1,2

--Total Cases vs Total Deaths
--Shows likelihood of dying if you contract Covid in your country

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage
FROM `portfolioproject-335318.covid.CovidDeaths`
WHERE location LIKE 'United States'
AND continent IS NOT NULL
ORDER BY 1,2

--Total Cases vs Population
--Shows what percentage of population infected with Covid

SELECT location, date, total_cases, population, (total_cases/population)*100 AS PercentPopulationInfected
FROM `portfolioproject-335318.covid.CovidDeaths`
--WHERE location LIKE 'United States'
ORDER BY 1,2

--Countries with Highest Infection Rate vs Population

SELECT location, MAX(total_cases) as HighestInfectionCount, population, MAX((total_cases/population))*100 AS PercentPopulationInfected
FROM `portfolioproject-335318.covid.CovidDeaths`
--WHERE location LIKE 'United States'
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC

--Countries with Highest Death Count per Population

SELECT location, MAX(CAST(total_deaths AS int)) AS TotalDeathCount
FROM `portfolioproject-335318.covid.CovidDeaths`
--WHERE location LIKE 'United States'
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY TotalDeathCount DESC

--Break down by continent
--Continents with the highest death count per population

SELECT continent, MAX(CAST(total_deaths AS int)) AS TotalDeathCount
FROM `portfolioproject-335318.covid.CovidDeaths`
--WHERE location LIKE 'United States'
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC

--Global numbers

SELECT SUM(new_cases) AS total_cases, SUM(CAST(new_deaths AS int)) AS total_deaths, SUM(CAST(new_deaths AS int))/SUM(new_cases)*100 AS DeathPercentage
FROM `portfolioproject-335318.covid.CovidDeaths`
--WHERE location LIKE 'United States'
WHERE continent IS NOT NULL
--GROUP BY date
ORDER BY 1,2

--Total Population vs Vaccinations
--Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated/population
--,(RollingPeopleVaccinated/population)*100
FROM `portfolioproject-335318.covid.CovidDeaths` dea
JOIN `portfolioproject-335318.covid.CovidVaccinations` vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2,3

--Use CTE to perform calculation on Partition By in previous query

With PopvsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
AS 
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
--,(RollingPeopleVaccinated/population)*100
FROM `portfolioproject-335318.covid.CovidDeaths` dea
JOIN `portfolioproject-335318.covid.CovidVaccinations` vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2,3
)
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopsvsVac

--Use Temp Table to perform calculations of Partition By in previous query

DROP TABLE IF EXISTS #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
    continent nverchar(255),
    location nvarcher(255),
    date datetime,
    population numeric,
    new_vaccinations numeric,
    RollingPeopleVaccinated numeric
)

INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
--,(RollingPeopleVaccinated/population)*100
FROM `portfolioproject-335318.covid.CovidDeaths` dea
JOIN `portfolioproject-335318.covid.CovidVaccinations` vac
    ON dea.location = vac.location
    AND dea.date = vac.date
--WHERE dea.continent IS NOT NULL
--ORDER BY 2,3

SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PercentPopulationVaccinated

--Creating View to store data for later visualizations

CREATE VIEW PercentPopulationVaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
--,(RollingPeopleVaccinated/population)*100
FROM `portfolioproject-335318.covid.CovidDeaths` dea
JOIN `portfolioproject-335318.covid.CovidVaccinations` vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2,3
